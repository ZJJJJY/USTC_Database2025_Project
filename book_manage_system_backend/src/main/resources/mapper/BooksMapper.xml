<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.book.backend.mapper.BooksMapper">

    <resultMap id="BaseResultMap" type="com.book.backend.pojo.Books">
            <id property="bookId" column="book_id" jdbcType="INTEGER"/>
            <result property="bookNumber" column="book_number" jdbcType="BIGINT"/>
            <result property="bookName" column="book_name" jdbcType="VARCHAR"/>
            <result property="bookAuthor" column="book_author" jdbcType="VARCHAR"/>
            <result property="bookLibrary" column="book_library" jdbcType="VARCHAR"/>
            <result property="bookType" column="book_type" jdbcType="VARCHAR"/>
            <result property="bookLocation" column="book_location" jdbcType="VARCHAR"/>
            <result property="bookStatus" column="book_status" jdbcType="VARCHAR"/>
            <result property="bookDescription" column="book_description" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        book_id,book_number,book_name,
        book_author,book_library,book_type,
        book_location,book_status,book_description,
        create_time,update_time
    </sql>


    <select id="searchBookPageWithRating" resultType="com.book.backend.pojo.Books">
        SELECT
            b.*,
            IFNULL(avg_r.avg_score, 0) AS avgScore
        FROM
            t_books b
                LEFT JOIN (
                SELECT
                    book_number,
                    ROUND(AVG(score), 1) AS avg_score
                FROM
                    book_rating

                GROUP BY
                    book_number
            ) avg_r ON b.book_number = avg_r.book_number

        <where>
            <if test='condition != null and query != null'>
                ${condition} LIKE CONCAT('%', #{query}, '%')
            </if>
        </where>

        ORDER BY
            avg_r.avg_score DESC
    </select>
</mapper>
